<!DOCTYPE html>
<html lang="fr">
  <head>
      <meta charset="utf-8">
      <title><%=typeof title == 'undefined' ? 'Dojoctylo' : title%></title>
      <meta name="author" content="Baptiste Vannesson">

      <!-- Viewport mobile tag for sensible mobile support -->
      <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


      <!--
          Stylesheets and Preprocessors
          ==============================

          You can always bring in CSS files manually with `<link>` tags, or asynchronously
          using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
          of Sails' conventional asset pipeline (boilerplate Gruntfile).

          By default, stylesheets from your `assets/styles` folder are included
          here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
          are supported. In production, your styles will be minified and concatenated into
          a single file.

          To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
          For example, here are a few things you could do:

              + Change the order of your CSS files
              + Import stylesheets from other directories
              + Use a different or additional preprocessor, like SASS, SCSS or Stylus
      -->

      <!--STYLES-->
      <link rel="stylesheet" href="/styles/importer.css">
      <!--STYLES END-->
  </head>

  <body>
    <header>
      <a href="/" title="Accueil" id="logo">
        <img src="/images/charte-graphique/illustrations/clavier.png" alt="Clavier" />
      </a>
      <h1>Dojoctylo</h1>
      <div id="liensHeader">
        <!-- Auth infos -->
      </div>
    </header>
    <nav id="top-menu">
      <div class="paper"></div>
        <ul>
          <li><a href="/apprendre">Apprendre</a></li>
          <li><a href="/pratiquer">Pratiquer</a></li>
          <li><a href="/affronter">Affronter</a></li>
        </ul>
      <div class="paper"></div>
    </nav>
    <section id="corps">
      <%- body %>
    </section>
    <footer>
      <ul>
        <li><a href="/mentions-legales">Mentions l√©gales</a></li>
        <li><a href="/faq">FAQ</a></li>
        <li><a href="/plan-du-site">Plan du site</a></li>
        <li><a href="/classement/jour">Classement</a></li>
      </ul>
      <ul>
        <li><a href="https://www.facebook.com/" title="Facebook"><img src="/images/charte-graphique/icones/social/facebook.png" alt="Facebook" /></a></li>
        <li><a href="https://twitter.com/" title="Twitter"><img src="/images/charte-graphique/icones/social/twitter.png" alt="Twitter" /></a></li>
        <li><a href="mailto:contact@badacadabra.net" title="E-mail"><img src="/images/charte-graphique/icones/social/mail-1.png" alt="E-mail" /></a></li>
      </ul>
    </footer>


    <!--
        Client-side Templates
        ========================

        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.

        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).

        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Import templates from other directories
            + Use a different template engine (handlebars, jade, dust, etc.)
            + Internationalize your client-side templates using a server-side
              stringfile before they're served.
    -->

    <!--TEMPLATES-->
    
    <!--TEMPLATES END-->


    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->

    <!--SCRIPTS-->
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dactylographie/contenus/code/jquery-2.1.1.js"></script>
    <script src="/js/dactylographie/entrainement.js"></script>
    <script src="/js/dactylographie/test.js"></script>
    <script src="/js/popup/popupAjoutExercice.js"></script>
    <script src="/js/popup/popupConnexion.js"></script>
    <script src="/js/popup/popupModifProfil.js"></script>
    <script src="/js/tchat/tchat.js"></script>
    <script src="/js/validForm/validForm.js"></script>
    <!--SCRIPTS END-->
  </body>
</html>
